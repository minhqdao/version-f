name: CI
on: push

jobs:
  fpm-test:
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest, macos-13]
        toolchain:
          - { compiler: gcc, version: "13" }
          - { compiler: intel, version: "2024.1" }
          - { compiler: intel-classic, version: "2021.12" }
        exclude:
          - os: macos-13
            toolchain: { compiler: intel, version: "2024.1" }
          - os: macos-13
            toolchain: { compiler: intel-classic, version: "2021.12" }
        include:
          - os: ubuntu-latest
            toolchain: { compiler: nvidia-hpc, version: "23.11" }
          - os: macos-13
            toolchain: { compiler: intel-classic, version: "2021.10" }
          - os: windows-latest
            toolchain: { compiler: gcc, version: "13" }
    runs-on: ${{ matrix.os }}
    steps:
      - uses: actions/checkout@v4
      - uses: fortran-lang/setup-fortran@v1
        id: setup-fortran
        with:
          compiler: ${{ matrix.toolchain.compiler }}
          version: ${{ matrix.toolchain.version }}
      - name: macos workaround
        if: runner.os == 'macos'
        run: brew install gcc@10
      - uses: fortran-lang/setup-fpm@v5
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
      - run: fpm test

  fpm-test-mingw64-gcc:
    runs-on: windows-latest
    defaults:
      run:
        shell: msys2 {0}
    steps:
      - uses: actions/checkout@v4
      - uses: msys2/setup-msys2@v2
        with:
          msystem: mingw64
          install: >-
            mingw-w64-x86_64-gcc-fortran
            mingw-w64-x86_64-fpm
      - run: fpm test

  fpm-test-ucrt64-gcc:
    runs-on: windows-latest
    defaults:
      run:
        shell: msys2 {0}
    steps:
      - uses: actions/checkout@v4
      - uses: msys2/setup-msys2@v2
        with:
          msystem: ucrt64
          install: >-
            mingw-w64-ucrt-x86_64-gcc-fortran
            mingw-w64-ucrt-x86_64-fpm
      - run: fpm test

  make-test:
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest, macos-latest]
        toolchain:
          - { compiler: gcc, version: "13" }
        include:
          - os: ubuntu-latest
            toolchain: { compiler: intel, version: "2024.1" }
          - os: ubuntu-latest
            toolchain: { compiler: intel-classic, version: "2021.12" }
          - os: macos-latest
            toolchain: { compiler: intel-classic, version: "2021.10" }
          - os: ubuntu-latest
            toolchain: { compiler: nvidia-hpc, version: "23.11" }
    runs-on: ${{ matrix.os }}
    steps:
      - uses: actions/checkout@v4
      - uses: fortran-lang/setup-fortran@v1
        id: setup-fortran
        with:
          compiler: ${{ matrix.toolchain.compiler }}
          version: ${{ matrix.toolchain.version }}
      - run: ${{ steps.setup-fortran.outputs.fc }} --version
      - run: make test FC=${{ steps.setup-fortran.outputs.fc }}

  make-test-mingw64-gcc:
    runs-on: windows-latest
    defaults:
      run:
        shell: msys2 {0}
    steps:
      - uses: actions/checkout@v4
      - uses: msys2/setup-msys2@v2
        with:
          msystem: mingw64
          install: >-
            make
            mingw-w64-x86_64-gcc-fortran
      - run: make test

  make-test-ucrt64-gcc:
    runs-on: windows-latest
    defaults:
      run:
        shell: msys2 {0}
    steps:
      - uses: actions/checkout@v4
      - uses: msys2/setup-msys2@v2
        with:
          msystem: ucrt64
          install: >-
            make
            mingw-w64-ucrt-x86_64-gcc-fortran
      - run: make test

  format:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-python@v5
        with:
          python-version: "3.12"
      - name: Check formatting
        run: |
          pip install fprettify

          diff=$(fprettify -i 2 -r . -d)

          if [[ $diff ]]; then
            red="\033[0;31m"
            cyan="\033[0;36m"
            reset="\033[0m"
            printf -- "$diff\n"
            printf "${red}The code is not correctly formatted. Please run: ${reset}\n"
            printf "${cyan}fprettify -i 2 -r .${reset}\n"
            exit 1
          fi
